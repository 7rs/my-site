/* Widths property for responsive support.

Stop hard-coding to specify widths. Do not use `widths.small`.

Usage:
  ```
  p
    font-size 1rem
    @media screen and (min-width widths.medium)
      font-size 1.25rem
    @media screen and (min-width widths.large)
      font-size 1.5rem
    @media screen and (min-width widths.largest)
      font-size 2rem
  ```

References:
  https://developer.mozilla.org/en/docs/Web/CSS/min-width
*/
widths = {  
  small: 300px,
  medium: 600px,
  large: 900px,
  largest: 1200px,
}

flex(direction = row, _gap = null, justify-content = null)
  display flex
  flex-direction direction
  if _gap
    if direction is column || direction is column-reverse
      row-gap _gap
    else
      column-gap _gap
  if justify-content
    justify-content justify-content

responsive-padding(_width = widths.large, x = 0.5rem, y = null)
  --large-width _width
  --padding-x x
  box-sizing border-box
  width 100%
  padding-left x
  padding-right x
  @media screen and (min-width widths.large)
    padding-left calc((100% - var(--large-width)) / 2 + var(--padding-x))
    padding-right calc((100% - var(--large-width)) / 2 + var(--padding-x))
  if y
    padding-top y
    padding-bottom y

set-absolute(position = absolute, left = 0, right = null)
  width 100%
  height 100%
  content ""
  position position
  if right
    right right
    bottom 0
  else
    left left
    top 0
