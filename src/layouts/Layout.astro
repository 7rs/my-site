---
import {
  Metadata,
  Frontmatter,
  getLocale,
  defaultLocale,
  defaultBlogLocale,
  setMetadataFromJSON,
} from "@lib/meta";
import { SchemaTypes, createSchema } from "@lib/schema";

import Meta from "@layouts/Meta.astro";
import Header from "@layouts/Header.astro";
import Footer from "@layouts/Footer.astro";

import { pages } from "pages.json";

import "@styles/main.styl";
import logo from "@assets/logo.svg";
import background from "@assets/background.jpg";
import darkBackground from "@assets/dark-background.jpg";

export interface Props {
  title: string;
  locale?: string;
  schemaMarkup?: string;
  frontmatter?: Frontmatter;
  fonts?: Array<string>;
}

const { title, locale = defaultLocale, schemaMarkup, frontmatter, fonts = [], ...props } = Astro.props;

// https://fonts.google.com/specimen/Fira+Sans
// https://fonts.google.com/specimen/Fira+Code
fonts.push(...(frontmatter ? ["Fira Sans", "Fira Code"] : ["Fira Sans"]));

let metadata: Metadata = setMetadataFromJSON(pages, logo.src, logo.src, "Cbrnex Logo", frontmatter ? !frontmatter.published: false);

let lang = locale;
let defaultSchemaMarkup: string;
if (frontmatter) {
  lang = frontmatter.lang || defaultBlogLocale;
  defaultSchemaMarkup = createSchema(SchemaTypes.Article, metadata, frontmatter);
} else {
  defaultSchemaMarkup = createSchema(SchemaTypes.Profile, metadata);
}

const backgroundURL = `url(${background.src})`;
const darkBackgroundURL = `url(${darkBackground.src})`;
---

<!doctype html>
<html lang={getLocale(lang) || locale}>
  <Meta title={frontmatter?.title || title} metadata={metadata} fonts={fonts}>
    <script type="application/ld+json" set:html={schemaMarkup || defaultSchemaMarkup} />
    <link rel="preload" as="image" fetchpriority="low" href={background.src} type="image/jpeg" />
    <link rel="preload" as="image" fetchpriority="low" href={darkBackground.src} type="image/jpeg" />
  </Meta>
  <body>
    <Header transition:persist />
    <main {...props}><slot /></main>
    <Footer transition:persist />
    <!-- The "Prettier" is stupid. Where's prettier?????? -->
    <style lang="stylus" define:vars={{backgroundURL, darkBackgroundURL}} is:global>
  @import "../styles/api.styl"

  html
    @media (prefers-color-scheme light)
      background var(--backgroundURL) center/cover no-repeat fixed, colors.background
    @media (prefers-color-scheme dark)
      background var(--darkBackgroundURL) center/cover no-repeat fixed, colors.dark.background
</style>
  </body>
</html>
