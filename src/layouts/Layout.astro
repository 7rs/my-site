---
import { fade } from "astro:transitions";

// Scripts
import { defaultLocale, setMetadataFromJSON } from "@lib/meta";
import { SchemaTypes, createSchema } from "@lib/schema";

// UI & Styling
import Meta from "@layouts/Meta.astro";
import Header from "@layouts/Header.astro";
import Footer from "@layouts/Footer.astro";
import "@styles/default.styl"

// Receives props
export interface Props {
  title: string;
  locale?: string;
  fonts?: Array<string>;
  schemaMarkup?: string;
  noIndex?: boolean;
}
const { 
  title,
  locale = defaultLocale,
  fonts = ["Fira+Sans:wght@400;700;900"],
  schemaMarkup,
  noIndex =false,
  ...props 
} = Astro.props;

// Loads configrations
import { pages } from "pages.json";
import logo from "@icons/colored-7rs.svg";
let metadata = setMetadataFromJSON(pages, logo.src, logo.src, "Cbrnex Logo");

// Loads wallpapers
import dark from "@assets/dark900.avif";
import light from "@assets/light900.avif";
const darkBackground = `url(${dark.src})`;
const lightBackground = `url(${light.src})`;
---

<!doctype html>
<html lang={locale}>
  <Meta title={title} metadata={metadata} fonts={fonts}>
    <script type="application/ld+json" set:html={schemaMarkup || createSchema(SchemaTypes.Profile, metadata)} />
    <link rel="prefetch" fetchpriority="low" as="image" type="image/avif" href={light.src} />
    <link rel="prefetch" fetchpriority="low" as="image" type="image/avif" href={dark.src} />
  </Meta>
  <body>
    <Header />
    <main {...props} transition:animate={fade({ duration: "0.1s" })} data-pagefind-body={noIndex ? undefined : ""}>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style lang="stylus" define:vars={{darkBackground, lightBackground}} is:global>
  @import "../styles/api.styl"

  main::before
    z-index -1002
    full-size-before()
    @media (prefers-color-scheme light)
      background var(--lightBackground) center/cover no-repeat fixed, colors.background
    @media (prefers-color-scheme dark)
      background var(--darkBackground) center/cover no-repeat fixed, colors.dark.background

  body
    overflow-x clip
    z-index -1001
    position relative
    box-sizing border-box
    min-height 100vh
    max-width 100%
    flex(column)
    scrollbar(5px) // Chrome & Edge

  main
    z-index 0
    position relative
    flex-grow 1
    min-height 100%
    responsive-padding()
    padding-bottom 3rem
    flex(column, 3rem)
</style>
