---
import { website, postDetail } from "@lib/meta";
import { personSchema, Assignee, Schemas } from "@lib/schema";
import { getFont } from "@lib/font"

// import Meta from '@layouts/Meta.astro';
import Meta from '@layouts-components/meta/Meta.astro';
import Header from "@layouts/Header.astro";

import PostHeader from "@layouts-components/blog/PostHeader.astro"
import Sidebar from "@layouts-components/blog/Sidebar.astro"
import PostFooter from "@components/layouts/blog/PostFooter.astro";

import logo from "@icons/favicon.svg";

export interface Props {
  frontmatter: { tags?: string[], [key: string ]: any };
  headings: { depth: number; slug: string; text: string }[];
}
const { frontmatter, headings } = Astro.props;

const FixedFrontmatter = postDetail.parse(frontmatter)

const authors = {
  "Cbrnex": personSchema.parse({
    name: "Cbrnex",
    alternateName: "7rs",
    image: "https://7rs.dev/avatar",
    url: "https://7rs.dev/",
    sameAs: "https://github.com/7rs",
    jobTitle: "Student",
  })
}

let authorsSchema: Assignee[] = []
FixedFrontmatter.authors.map(name => authors[name] && authorsSchema.push(authors[name]))
---

<!doctype html>
<html lang={FixedFrontmatter.lang}>
  <Meta
    title={FixedFrontmatter.title}
    noIndex={!FixedFrontmatter.published}
    resources={{
      fonts:[
        getFont("Fira Sans", [{}, {weight: 700}, {typefaces: 1},  {weight: 700, typefaces: 1}]),
        getFont("Fira Code"),
      ]
    }}
    schemaType={Schemas.Article}
    schema={{
      headline: FixedFrontmatter.title,
      datePublished: FixedFrontmatter.published_at,
      dateModified: FixedFrontmatter.updated_at,
      author: {
    name: "Cbrnex",
    alternateName: "7rs",
    image: "https://www.gravatar.com/avatar/1b6f182a11eba357a5b85085b74acccd",
    url: "https://7rs.dev/",
    sameAs: "https://github.com/7rs",
    jobTitle: "Student",
  }
    }}
  />
  <body class="markdown system">
    <Header />
    <main >
      <PostHeader frontmatter={FixedFrontmatter} />
      <section main-content data-pagefind-body={FixedFrontmatter.published ? '' : undefined}>
        <slot />
      </section>
      <PostFooter lang={FixedFrontmatter.lang}  />
    </main>
    <Sidebar frontmatter={FixedFrontmatter} headings={headings} />
  </body>
</html>

<style lang="stylus">
  @import "../styles/api.styl"

  body.markdown
    background var(--background)
    z-index 0
    position relative
    box-sizing border-box

    height 100vh
    width 100%
    max-height 100vh
    max-width widths.largest

    display grid
    grid-template-areas "header" \
                        "content"
    @media screen and (min-width widths.large)
      grid-template-areas "header  header " \
                          "content sidebar"
      margin auto
      max-height 100vh
      grid-template-rows 1fr calc(100vh - 1fr)
      grid-template-columns 3fr 1fr

    header[main-header]
      grid-area header

    main
      grid-area content
      max-width 900px

    aside
      grid-area sidebar
      @media screen and (min-width widths.largest)
        max-width 300px

    aside, main
      overflow clip auto
      box-sizing border-box
      padding 3rem 1.5rem
      width 100%
      height 100%
      scrollbar()

      padding 2rem 1rem
      @media screen and (min-width widths.largest)
        padding 3rem 1.5rem
</style>
