---
import { Metadata, defaultLocale, setMetadataFromJSON } from "@lib/meta";
import { SchemaTypes, createSchema } from "@lib/schema";

import { fade } from "astro:transitions";

import Meta from "@layouts/Meta.astro";
import Header from "@layouts/old/Header.astro";
import Footer from "@layouts/old/Footer.astro";

import { pages } from "pages.json";

import "@styles/main.styl";
import logo from "@icons/logo.svg";

import dark from "@assets/dark900.avif";
import light from "@assets/light900.avif";

const darkBackground = `url(${dark.src})`;
const lightBackground = `url(${light.src})`;

export interface Props {
  title: string;
  locale?: string;
  schemaMarkup?: string;
}

const { title, locale = defaultLocale, schemaMarkup, ...props } = Astro.props;

// https://fonts.google.com/specimen/Fira+Sans
const fonts = ["Fira Code"]

let metadata: Metadata = setMetadataFromJSON(
  pages,
  logo.src,
  logo.src,
  "Cbrnex Logo",
);

let lang = locale;
let defaultSchemaMarkup: string;
let search: string | undefined = "";
defaultSchemaMarkup = createSchema(SchemaTypes.Profile, metadata);
---

<!doctype html>
<html lang={lang}>
  <Meta title={title} metadata={metadata} fonts={fonts}>
    <script type="application/ld+json" set:html={schemaMarkup || defaultSchemaMarkup} />
    <link rel="prefetch" fetchpriority="low" as="image" type="image/jpeg" href={light.src} />
    <link rel="prefetch" fetchpriority="low" as="image" type="image/jpeg" href={dark.src} />
  </Meta>
  <body>
    <Header transition:persist />
    <main {...props} transition:animate={fade({ duration: "0.1s" })} data-pagefind-body={search}>
      <slot />
    </main>
    <Footer transition:persist />
  </body>
</html>

<style lang="stylus" define:vars={{darkBackground, lightBackground}} is:global>
  @import "../../styles/api.styl"

  html
    overflow hidden auto
    @media (prefers-color-scheme light)
      background var(--lightBackground) center/cover no-repeat fixed, colors.background
    @media (prefers-color-scheme dark)
      background var(--darkBackground) center/cover no-repeat fixed, colors.dark.background
</style>
